version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15
    container_name: training-track-db-dev
    restart: unless-stopped
    env_file:
      - .env.development
    environment:
      TZ: Asia/Ho_Chi_Minh
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "127.0.0.1:5444:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - training-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Session Store (Development)
  redis:
    image: redis:7-alpine
    container_name: training-track-redis-dev
    restart: unless-stopped
    ports:
      - "127.0.0.1:6399:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - training-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  training-network:
    driver: bridge 