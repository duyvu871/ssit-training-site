<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}} - Training Track Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="/css/styles.css" rel="stylesheet">
</head>

<body class="bg-gray-100">
    <!-- Top Navigation -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between h-16">
                <!-- Left side -->
                <div class="flex">
                    <div class="flex-shrink-0 flex items-center">
                        <a href="/admin" class="text-xl font-bold text-gray-800">
                            Training Track
                        </a>
                    </div>
                    <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
                        <a href="/admin"
                            class="{{#if (eq active 'dashboard')}}border-blue-500 text-gray-900{{else}}border-transparent text-gray-500{{/if}} hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                            Dashboard
                        </a>
                        <a href="/admin/courses"
                            class="{{#if (eq active 'courses')}}border-blue-500 text-gray-900{{else}}border-transparent text-gray-500{{/if}} hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                            Khóa học
                        </a>
                        <a href="/admin/users"
                            class="{{#if (eq active 'users')}}border-blue-500 text-gray-900{{else}}border-transparent text-gray-500{{/if}} hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                            Học viên
                        </a>
                        <a href="/admin/support"
                            class="{{#if (eq active 'support')}}border-blue-500 text-gray-900{{else}}border-transparent text-gray-500{{/if}} hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">
                            Hỗ trợ
                        </a>
                    </div>
                </div>

                <!-- Right side -->
                <div class="flex items-center">
                    <!-- Notifications -->
                    <div class="relative">
                        <button id="notificationBtn"
                            class="relative text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium">
                            <i class="fas fa-bell mr-1"></i>
                            <span id="notificationBadge"
                                class="absolute -top-1 -right-1 bg-red-500 text-white text-xs w-4 h-4 rounded-full flex items-center justify-center">0</span>
                        </button>

                        <div id="notificationDropdown"
                            class="hidden absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border overflow-hidden z-50">
                            <div class="p-4 border-b">
                                <div class="flex justify-between items-center">
                                    <h3 class="font-semibold">Thông báo</h3>
                                    <button id="clearReadBtn" class="text-sm text-gray-600 hover:underline">
                                        Xóa đã đọc
                                    </button>
                                </div>
                            </div>

                            <div id="notificationList" class="max-h-96 overflow-y-auto">
                                <!-- Notifications will be loaded here -->
                            </div>

                            <div id="notificationPagination" class="p-4 border-t bg-gray-50">
                                <div class="flex justify-between items-center text-sm">
                                    <button id="prevPageBtn" class="text-gray-600 hover:text-gray-900 disabled:opacity-50">
                                        <i class="fas fa-chevron-left mr-1"></i>Trước
                                    </button>
                                    <span id="paginationInfo">Trang 1/1</span>
                                    <button id="nextPageBtn" class="text-gray-600 hover:text-gray-900 disabled:opacity-50">
                                        Sau<i class="fas fa-chevron-right ml-1"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- User menu -->
                    <div class="ml-3 relative">
                        <div>
                            <button id="userMenuBtn" type="button"
                                class="bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                                aria-expanded="false" aria-haspopup="true">
                                <span class="sr-only">Mở menu</span>
                                <div
                                    class="h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-600">
                                    <i class="fas fa-user"></i>
                                </div>
                            </button>
                        </div>

                        <div id="userMenu"
                            class="hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50">
                            <div class="px-4 py-2 text-sm text-gray-700 border-b">
                                <div class="font-medium">{{user.name}}</div>
                                <div class="text-gray-500">{{user.email}}</div>
                            </div>
                            <a href="/auth/logout"
                                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                Đăng xuất
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Flash Messages -->
    {{#if success_msg}}
    <div class="max-w-7xl mx-auto px-4 mt-4">
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
            <span class="block sm:inline">{{success_msg}}</span>
            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                <button class="alert-close">
                    <i class="fas fa-times"></i>
                </button>
            </span>
        </div>
    </div>
    {{/if}}

    {{#if error_msg}}
    <div class="max-w-7xl mx-auto px-4 mt-4">
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
            <span class="block sm:inline">{{error_msg}}</span>
            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                <button class="alert-close">
                    <i class="fas fa-times"></i>
                </button>
            </span>
        </div>
    </div>
    {{/if}}

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        {{{body}}}
    </main>

    <!-- Footer -->
    <footer class="bg-white shadow mt-8">
        <div class="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8">
            <p class="text-center text-sm text-gray-500">
                &copy; 2025 Training Track. All rights reserved.
            </p>
        </div>
    </footer>

    <script>
        // Toggle user menu
        const userMenuBtn = document.getElementById('userMenuBtn');
        const userMenu = document.getElementById('userMenu');
        if (userMenuBtn && userMenu) {
            userMenuBtn.addEventListener('click', () => {
                userMenu.classList.toggle('hidden');
            });

            // Close when clicking outside
            document.addEventListener('click', (e) => {
                if (!userMenuBtn.contains(e.target) && !userMenu.contains(e.target)) {
                    userMenu.classList.add('hidden');
                }
            });
        }

        // Toggle notification dropdown
        const notificationBtn = document.getElementById('notificationBtn');
        const notificationDropdown = document.getElementById('notificationDropdown');
        if (notificationBtn && notificationDropdown) {
            notificationBtn.addEventListener('click', () => {
                notificationDropdown.classList.toggle('hidden');
            });

            // Close when clicking outside
            document.addEventListener('click', (e) => {
                if (!notificationBtn.contains(e.target) && !notificationDropdown.contains(e.target)) {
                    notificationDropdown.classList.add('hidden');
                }
            });
        }

        // Close alert messages
        document.querySelectorAll('.alert-close').forEach(button => {
            button.addEventListener('click', () => {
                button.closest('[role="alert"]').remove();
            });
        });

        // Auto-hide alert messages after 5 seconds
        setTimeout(() => {
            document.querySelectorAll('[role="alert"]').forEach(alert => {
                alert.remove();
            });
        }, 5000);

        // Load notifications
        let currentPage = 1;
        const limit = 10;

        function loadNotifications(page = 1) {
            fetch(`/notifications?page=${page}&limit=${limit}`)
                .then(res => res.json())
                .then(data => {
                    const notificationList = document.getElementById('notificationList');
                    const paginationInfo = document.getElementById('paginationInfo');
                    const prevPageBtn = document.getElementById('prevPageBtn');
                    const nextPageBtn = document.getElementById('nextPageBtn');
                    const notificationBadge = document.getElementById('notificationBadge');

                    // Update notifications
                    notificationList.innerHTML = data.notifications.map(notification => `
                        <a href="${notification.link || '#'}" class="block px-4 py-3 hover:bg-gray-50 border-b ${notification.isRead ? '' : 'bg-blue-50'}">
                            <p class="text-sm font-medium text-gray-900">${notification.title}</p>
                            <p class="text-sm text-gray-500 mt-1">${notification.content}</p>
                            <p class="text-xs text-gray-400 mt-1">${fromNow(notification.createdAt)}</p>
                        </a>
                    `).join('');

                    // Update pagination
                    const totalPages = Math.ceil(data.total / limit);
                    paginationInfo.textContent = `Trang ${page}/${totalPages}`;
                    prevPageBtn.disabled = page <= 1;
                    nextPageBtn.disabled = page >= totalPages;

                    // Update badge
                    notificationBadge.textContent = data.unreadCount;
                    if (data.unreadCount > 0) {
                        notificationBadge.classList.remove('hidden');
                    } else {
                        notificationBadge.classList.add('hidden');
                    }
                });
        }

        // Load initial notifications
        loadNotifications();

        // Refresh notifications every 30 seconds
        setInterval(() => loadNotifications(currentPage), 30000);

        // Pagination handlers
        document.getElementById('prevPageBtn').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                loadNotifications(currentPage);
            }
        });

        document.getElementById('nextPageBtn').addEventListener('click', () => {
            currentPage++;
            loadNotifications(currentPage);
        });

        // Clear read notifications
        document.getElementById('clearReadBtn').addEventListener('click', () => {
            fetch('/notifications/clear-read', { method: 'POST' })
                .then(() => loadNotifications(1));
        });

        // Format relative time
        function fromNow(date) {
            const now = new Date();
            const then = new Date(date);
            const diff = Math.floor((now - then) / 1000); // seconds

            if (diff < 60) return 'Vừa xong';
            if (diff < 3600) return `${Math.floor(diff / 60)} phút trước`;
            if (diff < 86400) return `${Math.floor(diff / 3600)} giờ trước`;
            if (diff < 2592000) return `${Math.floor(diff / 86400)} ngày trước`;
            if (diff < 31536000) return `${Math.floor(diff / 2592000)} tháng trước`;
            return `${Math.floor(diff / 31536000)} năm trước`;
        }
    </script>
</body>

</html> 